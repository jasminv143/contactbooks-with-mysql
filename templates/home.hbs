{{> header}}
 <script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.7/handlebars.min.js"></script>
<div class="container">
	<div class="row m-0 mt-3">
		<div class="col-6">
            <form id="searchForm" class="d-flex" method="post">	
            	<select id="searchField" class="form-select" required>
            		<option value="">Field</option>
					<option value="id">Id </option> 
					<option value="firstname">Firstname </option> 
					<option value="lastname">Lastname </option> 
					<option value="gender">Gender </option> 
					<option value="phone_no">Phone Nubmer </option> 
					<option value="email">Email </option> 
					<option value="city">City </option> 
					<option value="time">Time </option> 
            	</select>
            	<input type="text"  id="search-q" placeholder="Search..." class="form-control" required>
            	<button type="submit" class="nav-item btn btn-primary ">Search</button>
			</form>
        </div>
		<div class="col-6">
        	<button type="submit" form="deleteContacts" id="deleteSelected" onclick="return confirm('Are you sure you want to delete selected contacts?');" disabled="" class="nav-item  btn btn-danger float-end">Delete Selected</button>
            <button id="resetAll" style="display: none;" class="btn btn-danger">Reset ALL</button>
        </div>
    </div>
	<div class="row mt-3 contact">	
	 	<form method='post' action='/deleteContacts' id="deleteContacts" >
	 	    <table border=1 width='100%' class='p-2 ' id="contactsTable">
				 	{{> contacts}}
            </table>
	 	</form>
	</div>
</div>

<script>
$(document).ready(function() {
    
    function addOrReplaceUrlParameter(key, value) {
        let url = new URL(window.location.href);
        if (url.searchParams.has(key)) {
            url.searchParams.set(key, value); 
        } else {
            url.searchParams.append(key, value); 
        }
        window.history.replaceState({ path: url.href }, '', url.href);
    }
    function getAllUrlParams() {
        var queryParams = new URLSearchParams(window.location.search);
        var params = {};
        queryParams.forEach(function(value, key) {
            params[key] = value;
        });
        return params;
    }
    function removeParameter(key=false) {
        let baseUrl = window.location.href.split('?')[0];
        if(key){
            let params = new URLSearchParams(window.location.search);
            params.delete(key);
            let newUrl = baseUrl + '?' + params.toString();
            history.replaceState(null, '', newUrl);
        }else{
            history.replaceState(null, '', baseUrl);
        }
    }
    // Function to update "Delete Selected" button state
    function updateDeleteButtonState() {
        const anyChecked = $('.submark').is(':checked');
        $('#deleteSelected').prop('disabled', !anyChecked);
    }
    $(document).on('click', "#resetAll", function() {
        removeParameter();
        fetchData();
        $("#resetAll").hide();
    });

    // Event listener for "Select All" checkbox
    $(document).on('change', "#checkAll", function() {
        $('.submark').prop('checked', this.checked);
        updateDeleteButtonState();
    });

    // Event listener for individual checkboxes
    $(document).on('change', ".submark", function() {
        const allChecked = $('.submark').length == $('.submark:checked').length;
        $('#checkAll').prop('checked', allChecked);
        updateDeleteButtonState();
    });

    // Initial state update
    updateDeleteButtonState();
    function fetchData() {
        var params = getAllUrlParams();
        $.ajax({
            url: '/allinone', // The URL of the server endpoint
            method: 'GET',
            data: {
                params
                 // _: new Date().getTime() //for cache remove
            },
            success: function(data) {
                $('#contactsTable').html(data);

            },
            error: function(err) {
                console.error('Error fetching sorted data:', err);
            }
        });
    }

    $(document).on('click', ".pagination .page-item .page-link", function(e) {
        e.preventDefault(); 
        if ($(this).closest('.page-item').hasClass('active')) {
            return; // Do nothing if the link is already active
        }
        addOrReplaceUrlParameter("page", $(this).data("page"));
        addOrReplaceUrlParameter("limit",$(this).data("limit"));
        fetchData();
        $("#resetAll").show()
    });
    let sortOrder = 'asc'; 
    $(document).on('click', ".sort", function(e) {
        e.preventDefault();
        const field = $(this).data('field');
        sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';
        addOrReplaceUrlParameter("sortOrder", sortOrder);
        addOrReplaceUrlParameter("sortField",field);
        fetchData();
        $("#resetAll").show()
    });
    $('#searchForm').on('submit', function(e) {
        e.preventDefault();
        addOrReplaceUrlParameter("searchField", $("#searchField").val());
        addOrReplaceUrlParameter("q", $("#search-q").val());
        fetchData();
        $("#resetAll").show()
    });


});
</script>
{{> footer}}
	